// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: cloud_file.proto

package rpc_impl

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CloudFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CloudFile) Reset() {
	*x = CloudFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_file_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloudFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloudFile) ProtoMessage() {}

func (x *CloudFile) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_file_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloudFile.ProtoReflect.Descriptor instead.
func (*CloudFile) Descriptor() ([]byte, []int) {
	return file_cloud_file_proto_rawDescGZIP(), []int{0}
}

type CloudFileListByUploaderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperatorID string      `protobuf:"bytes,1,opt,name=operatorID,proto3" json:"operatorID,omitempty"`
	Page       *Pagination `protobuf:"bytes,15,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *CloudFileListByUploaderReq) Reset() {
	*x = CloudFileListByUploaderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_file_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloudFileListByUploaderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloudFileListByUploaderReq) ProtoMessage() {}

func (x *CloudFileListByUploaderReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_file_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloudFileListByUploaderReq.ProtoReflect.Descriptor instead.
func (*CloudFileListByUploaderReq) Descriptor() ([]byte, []int) {
	return file_cloud_file_proto_rawDescGZIP(), []int{0, 0}
}

func (x *CloudFileListByUploaderReq) GetOperatorID() string {
	if x != nil {
		return x.OperatorID
	}
	return ""
}

func (x *CloudFileListByUploaderReq) GetPage() *Pagination {
	if x != nil {
		return x.Page
	}
	return nil
}

type CloudFileListByUploaderRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32              `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Files []*CloudFileFileRes `protobuf:"bytes,2,rep,name=files,proto3" json:"files,omitempty"`
	Err   *Err                `protobuf:"bytes,15,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *CloudFileListByUploaderRes) Reset() {
	*x = CloudFileListByUploaderRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_file_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloudFileListByUploaderRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloudFileListByUploaderRes) ProtoMessage() {}

func (x *CloudFileListByUploaderRes) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_file_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloudFileListByUploaderRes.ProtoReflect.Descriptor instead.
func (*CloudFileListByUploaderRes) Descriptor() ([]byte, []int) {
	return file_cloud_file_proto_rawDescGZIP(), []int{0, 1}
}

func (x *CloudFileListByUploaderRes) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *CloudFileListByUploaderRes) GetFiles() []*CloudFileFileRes {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *CloudFileListByUploaderRes) GetErr() *Err {
	if x != nil {
		return x.Err
	}
	return nil
}

type CloudFileFileRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileID           string `protobuf:"bytes,1,opt,name=fileID,proto3" json:"fileID,omitempty"`
	FileName         string `protobuf:"bytes,2,opt,name=fileName,proto3" json:"fileName,omitempty"`
	LastModifiedTime int64  `protobuf:"varint,3,opt,name=lastModifiedTime,proto3" json:"lastModifiedTime,omitempty"`
	FileURL          string `protobuf:"bytes,4,opt,name=fileURL,proto3" json:"fileURL,omitempty"`
	IsPublic         bool   `protobuf:"varint,5,opt,name=isPublic,proto3" json:"isPublic,omitempty"`
	UpdateTime       int64  `protobuf:"varint,6,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	CreatedTime      int64  `protobuf:"varint,7,opt,name=createdTime,proto3" json:"createdTime,omitempty"`
}

func (x *CloudFileFileRes) Reset() {
	*x = CloudFileFileRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_file_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloudFileFileRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloudFileFileRes) ProtoMessage() {}

func (x *CloudFileFileRes) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_file_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloudFileFileRes.ProtoReflect.Descriptor instead.
func (*CloudFileFileRes) Descriptor() ([]byte, []int) {
	return file_cloud_file_proto_rawDescGZIP(), []int{0, 2}
}

func (x *CloudFileFileRes) GetFileID() string {
	if x != nil {
		return x.FileID
	}
	return ""
}

func (x *CloudFileFileRes) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *CloudFileFileRes) GetLastModifiedTime() int64 {
	if x != nil {
		return x.LastModifiedTime
	}
	return 0
}

func (x *CloudFileFileRes) GetFileURL() string {
	if x != nil {
		return x.FileURL
	}
	return ""
}

func (x *CloudFileFileRes) GetIsPublic() bool {
	if x != nil {
		return x.IsPublic
	}
	return false
}

func (x *CloudFileFileRes) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *CloudFileFileRes) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

type CloudFileListPublicReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperatorID string      `protobuf:"bytes,1,opt,name=operatorID,proto3" json:"operatorID,omitempty"`
	Page       *Pagination `protobuf:"bytes,15,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *CloudFileListPublicReq) Reset() {
	*x = CloudFileListPublicReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_file_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloudFileListPublicReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloudFileListPublicReq) ProtoMessage() {}

func (x *CloudFileListPublicReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_file_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloudFileListPublicReq.ProtoReflect.Descriptor instead.
func (*CloudFileListPublicReq) Descriptor() ([]byte, []int) {
	return file_cloud_file_proto_rawDescGZIP(), []int{0, 3}
}

func (x *CloudFileListPublicReq) GetOperatorID() string {
	if x != nil {
		return x.OperatorID
	}
	return ""
}

func (x *CloudFileListPublicReq) GetPage() *Pagination {
	if x != nil {
		return x.Page
	}
	return nil
}

type CloudFileListPublicRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32              `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Files []*CloudFileFileRes `protobuf:"bytes,2,rep,name=files,proto3" json:"files,omitempty"`
	Err   *Err                `protobuf:"bytes,15,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *CloudFileListPublicRes) Reset() {
	*x = CloudFileListPublicRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_file_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloudFileListPublicRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloudFileListPublicRes) ProtoMessage() {}

func (x *CloudFileListPublicRes) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_file_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloudFileListPublicRes.ProtoReflect.Descriptor instead.
func (*CloudFileListPublicRes) Descriptor() ([]byte, []int) {
	return file_cloud_file_proto_rawDescGZIP(), []int{0, 4}
}

func (x *CloudFileListPublicRes) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *CloudFileListPublicRes) GetFiles() []*CloudFileFileRes {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *CloudFileListPublicRes) GetErr() *Err {
	if x != nil {
		return x.Err
	}
	return nil
}

type CloudFileUploadReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperatorID       string `protobuf:"bytes,1,opt,name=operatorID,proto3" json:"operatorID,omitempty"`
	FileName         string `protobuf:"bytes,2,opt,name=fileName,proto3" json:"fileName,omitempty"`
	ExtensionName    string `protobuf:"bytes,3,opt,name=extensionName,proto3" json:"extensionName,omitempty"`
	LastModifiedTime int64  `protobuf:"varint,4,opt,name=lastModifiedTime,proto3" json:"lastModifiedTime,omitempty"`
	IsPublic         bool   `protobuf:"varint,5,opt,name=isPublic,proto3" json:"isPublic,omitempty"`
}

func (x *CloudFileUploadReq) Reset() {
	*x = CloudFileUploadReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_file_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloudFileUploadReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloudFileUploadReq) ProtoMessage() {}

func (x *CloudFileUploadReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_file_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloudFileUploadReq.ProtoReflect.Descriptor instead.
func (*CloudFileUploadReq) Descriptor() ([]byte, []int) {
	return file_cloud_file_proto_rawDescGZIP(), []int{0, 5}
}

func (x *CloudFileUploadReq) GetOperatorID() string {
	if x != nil {
		return x.OperatorID
	}
	return ""
}

func (x *CloudFileUploadReq) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *CloudFileUploadReq) GetExtensionName() string {
	if x != nil {
		return x.ExtensionName
	}
	return ""
}

func (x *CloudFileUploadReq) GetLastModifiedTime() int64 {
	if x != nil {
		return x.LastModifiedTime
	}
	return 0
}

func (x *CloudFileUploadReq) GetIsPublic() bool {
	if x != nil {
		return x.IsPublic
	}
	return false
}

type CloudFileModifyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperatorID    string `protobuf:"bytes,1,opt,name=operatorID,proto3" json:"operatorID,omitempty"`
	FileID        string `protobuf:"bytes,2,opt,name=fileID,proto3" json:"fileID,omitempty"`
	Password      string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	FileName      string `protobuf:"bytes,4,opt,name=fileName,proto3" json:"fileName,omitempty"`
	ExtensionName string `protobuf:"bytes,5,opt,name=extensionName,proto3" json:"extensionName,omitempty"`
	IsPublic      bool   `protobuf:"varint,6,opt,name=isPublic,proto3" json:"isPublic,omitempty"`
	HasNewFile    bool   `protobuf:"varint,7,opt,name=hasNewFile,proto3" json:"hasNewFile,omitempty"` // if user upload a new file, use for judge if user do any modify or not
}

func (x *CloudFileModifyReq) Reset() {
	*x = CloudFileModifyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_file_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloudFileModifyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloudFileModifyReq) ProtoMessage() {}

func (x *CloudFileModifyReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_file_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloudFileModifyReq.ProtoReflect.Descriptor instead.
func (*CloudFileModifyReq) Descriptor() ([]byte, []int) {
	return file_cloud_file_proto_rawDescGZIP(), []int{0, 6}
}

func (x *CloudFileModifyReq) GetOperatorID() string {
	if x != nil {
		return x.OperatorID
	}
	return ""
}

func (x *CloudFileModifyReq) GetFileID() string {
	if x != nil {
		return x.FileID
	}
	return ""
}

func (x *CloudFileModifyReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CloudFileModifyReq) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *CloudFileModifyReq) GetExtensionName() string {
	if x != nil {
		return x.ExtensionName
	}
	return ""
}

func (x *CloudFileModifyReq) GetIsPublic() bool {
	if x != nil {
		return x.IsPublic
	}
	return false
}

func (x *CloudFileModifyReq) GetHasNewFile() bool {
	if x != nil {
		return x.HasNewFile
	}
	return false
}

type CloudFileDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperatorID string `protobuf:"bytes,1,opt,name=operatorID,proto3" json:"operatorID,omitempty"`
	Password   string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	FileID     string `protobuf:"bytes,3,opt,name=fileID,proto3" json:"fileID,omitempty"`
}

func (x *CloudFileDeleteReq) Reset() {
	*x = CloudFileDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_file_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloudFileDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloudFileDeleteReq) ProtoMessage() {}

func (x *CloudFileDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_file_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloudFileDeleteReq.ProtoReflect.Descriptor instead.
func (*CloudFileDeleteReq) Descriptor() ([]byte, []int) {
	return file_cloud_file_proto_rawDescGZIP(), []int{0, 7}
}

func (x *CloudFileDeleteReq) GetOperatorID() string {
	if x != nil {
		return x.OperatorID
	}
	return ""
}

func (x *CloudFileDeleteReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CloudFileDeleteReq) GetFileID() string {
	if x != nil {
		return x.FileID
	}
	return ""
}

var File_cloud_file_proto protoreflect.FileDescriptor

var file_cloud_file_proto_rawDesc = []byte{
	0x0a, 0x10, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x09, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x1a, 0x0c, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x96, 0x09, 0x0a, 0x09,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x1a, 0x5b, 0x0a, 0x11, 0x6c, 0x69, 0x73,
	0x74, 0x42, 0x79, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1e,
	0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x12, 0x26,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x1a, 0x7c, 0x0a, 0x11, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x79,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x32, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x52, 0x05,
	0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x65, 0x72, 0x72, 0x52,
	0x03, 0x65, 0x72, 0x72, 0x1a, 0xe1, 0x01, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10,
	0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x52, 0x4c, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0x57, 0x0a, 0x0d, 0x6c, 0x69, 0x73, 0x74,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x1a, 0x78, 0x0a, 0x0d, 0x6c, 0x69, 0x73, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x52,
	0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x32, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x46,
	0x69, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x66, 0x69,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x03,
	0x65, 0x72, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x65, 0x72, 0x72, 0x52, 0x03, 0x65, 0x72, 0x72, 0x1a, 0xb5, 0x01, 0x0a, 0x09,
	0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x6c,
	0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x1a, 0xdd, 0x01, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x52, 0x65,
	0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49,
	0x44, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x24, 0x0a, 0x0d, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x61, 0x73, 0x4e, 0x65, 0x77, 0x46, 0x69, 0x6c,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x68, 0x61, 0x73, 0x4e, 0x65, 0x77, 0x46,
	0x69, 0x6c, 0x65, 0x1a, 0x5f, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x66, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69,
	0x6c, 0x65, 0x49, 0x44, 0x32, 0xe9, 0x02, 0x0a, 0x0a, 0x49, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x46,
	0x69, 0x6c, 0x65, 0x12, 0x60, 0x0a, 0x0e, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x65, 0x72, 0x12, 0x26, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x46, 0x69, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x73, 0x74,
	0x42, 0x79, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x46,
	0x69, 0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x54, 0x0a, 0x0a, 0x6c, 0x69, 0x73, 0x74, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x12, 0x22, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x46,
	0x69, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x6c, 0x69,
	0x73, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x52, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x06, 0x75,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1e, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x46, 0x69, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x75, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x0b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x65,
	0x72, 0x72, 0x12, 0x35, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x12, 0x1e, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x46, 0x69,
	0x6c, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x0b, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x65, 0x72, 0x72, 0x12, 0x35, 0x0a, 0x06, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x12, 0x1e, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x0b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x65, 0x72, 0x72,
	0x42, 0x0e, 0x48, 0x03, 0x5a, 0x0a, 0x2e, 0x2f, 0x72, 0x70, 0x63, 0x5f, 0x69, 0x6d, 0x70, 0x6c,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cloud_file_proto_rawDescOnce sync.Once
	file_cloud_file_proto_rawDescData = file_cloud_file_proto_rawDesc
)

func file_cloud_file_proto_rawDescGZIP() []byte {
	file_cloud_file_proto_rawDescOnce.Do(func() {
		file_cloud_file_proto_rawDescData = protoimpl.X.CompressGZIP(file_cloud_file_proto_rawDescData)
	})
	return file_cloud_file_proto_rawDescData
}

var file_cloud_file_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_cloud_file_proto_goTypes = []interface{}{
	(*CloudFile)(nil),                  // 0: cloudFile.cloudFile
	(*CloudFileListByUploaderReq)(nil), // 1: cloudFile.cloudFile.listByUploaderReq
	(*CloudFileListByUploaderRes)(nil), // 2: cloudFile.cloudFile.listByUploaderRes
	(*CloudFileFileRes)(nil),           // 3: cloudFile.cloudFile.fileRes
	(*CloudFileListPublicReq)(nil),     // 4: cloudFile.cloudFile.listPublicReq
	(*CloudFileListPublicRes)(nil),     // 5: cloudFile.cloudFile.listPublicRes
	(*CloudFileUploadReq)(nil),         // 6: cloudFile.cloudFile.uploadReq
	(*CloudFileModifyReq)(nil),         // 7: cloudFile.cloudFile.modifyReq
	(*CloudFileDeleteReq)(nil),         // 8: cloudFile.cloudFile.deleteReq
	(*Pagination)(nil),                 // 9: common.pagination
	(*Err)(nil),                        // 10: common.err
}
var file_cloud_file_proto_depIdxs = []int32{
	9,  // 0: cloudFile.cloudFile.listByUploaderReq.page:type_name -> common.pagination
	3,  // 1: cloudFile.cloudFile.listByUploaderRes.files:type_name -> cloudFile.cloudFile.fileRes
	10, // 2: cloudFile.cloudFile.listByUploaderRes.err:type_name -> common.err
	9,  // 3: cloudFile.cloudFile.listPublicReq.page:type_name -> common.pagination
	3,  // 4: cloudFile.cloudFile.listPublicRes.files:type_name -> cloudFile.cloudFile.fileRes
	10, // 5: cloudFile.cloudFile.listPublicRes.err:type_name -> common.err
	1,  // 6: cloudFile.ICloudFile.listByUploader:input_type -> cloudFile.cloudFile.listByUploaderReq
	4,  // 7: cloudFile.ICloudFile.listPublic:input_type -> cloudFile.cloudFile.listPublicReq
	6,  // 8: cloudFile.ICloudFile.upload:input_type -> cloudFile.cloudFile.uploadReq
	7,  // 9: cloudFile.ICloudFile.modify:input_type -> cloudFile.cloudFile.modifyReq
	8,  // 10: cloudFile.ICloudFile.delete:input_type -> cloudFile.cloudFile.deleteReq
	2,  // 11: cloudFile.ICloudFile.listByUploader:output_type -> cloudFile.cloudFile.listByUploaderRes
	5,  // 12: cloudFile.ICloudFile.listPublic:output_type -> cloudFile.cloudFile.listPublicRes
	10, // 13: cloudFile.ICloudFile.upload:output_type -> common.err
	10, // 14: cloudFile.ICloudFile.modify:output_type -> common.err
	10, // 15: cloudFile.ICloudFile.delete:output_type -> common.err
	11, // [11:16] is the sub-list for method output_type
	6,  // [6:11] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_cloud_file_proto_init() }
func file_cloud_file_proto_init() {
	if File_cloud_file_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_cloud_file_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloudFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_file_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloudFileListByUploaderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_file_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloudFileListByUploaderRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_file_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloudFileFileRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_file_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloudFileListPublicReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_file_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloudFileListPublicRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_file_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloudFileUploadReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_file_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloudFileModifyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_file_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloudFileDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cloud_file_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cloud_file_proto_goTypes,
		DependencyIndexes: file_cloud_file_proto_depIdxs,
		MessageInfos:      file_cloud_file_proto_msgTypes,
	}.Build()
	File_cloud_file_proto = out.File
	file_cloud_file_proto_rawDesc = nil
	file_cloud_file_proto_goTypes = nil
	file_cloud_file_proto_depIdxs = nil
}
