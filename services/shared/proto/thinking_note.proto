syntax = "proto3";
package thinkingNote;

option go_package = "./rpc_impl";
option optimize_for = LITE_RUNTIME;

import "common.proto";

service IThinkingNote {
  rpc ListByWriter(ThinkingNote.ListByWriterReq) returns (ThinkingNote.ListByWriterRes);
  rpc ListPublic(ThinkingNote.ListPublicReq) returns (ThinkingNote.ListPublicRes);
  rpc Create(ThinkingNote.CreateReq) returns (ThinkingNote.CreateRes);
  rpc Modify(ThinkingNote.ModifyReq) returns (ThinkingNote.ModifyRes);
  rpc Delete(ThinkingNote.DeleteReq) returns (ThinkingNote.DeleteRes);
}

message ThinkingNote {
  message Data {
    string note_id = 1;
    string write_by = 2;
    string topic = 3;
    string content = 4;
    bool is_public = 5;
    int64 update_time = 6;
    int64 created_time = 7;
  }

  message ListByWriterReq {
    string operator_id = 1;

    common.Pagination page = 15;
  }

  message ListByWriterRes {
    uint32 total = 1;
    repeated Data notes = 2;
  }

  message ListPublicReq {
    string operator_id = 1;

    common.Pagination page = 15;
  }

  message ListPublicRes {
    uint32 total = 1;
    repeated Data notes = 2;
  }

  message CreateReq {
    string operator_id = 1;
    string topic = 2;
    string content = 3;
    bool is_public = 4;
  }

  message CreateRes {
  }

  message ModifyReq {
    string operator_id = 1;
    string note_id = 2;
    string password = 3;
    string topic = 4;
    string content = 5;
    bool is_public = 6;
  }

  message ModifyRes {
  }

  message DeleteReq {
    string operator_id = 1;
    string password = 2;
    string note_id = 3;
  }

  message DeleteRes {
  }
}
