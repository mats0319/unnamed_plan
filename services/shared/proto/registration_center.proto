syntax = "proto3";
package registrationCenter;

option go_package = "./rpc_impl";
option optimize_for = LITE_RUNTIME;

import "common.proto";

service IRegistrationCenterCore {
  rpc Register(RegistrationCenterCore.RegisterReq) returns (RegistrationCenterCore.RegisterRes);
  rpc ListServiceTarget(RegistrationCenterCore.ListServiceTargetReq) returns (RegistrationCenterCore.ListServiceTargetRes);
}

message RegistrationCenterCore {
  message RegisterReq {
    string service_id = 1;
    string target = 2; // ip+port, like '127.0.0.1:8080'
  }

  message RegisterRes {
    common.Error err = 15;
  }

  message ListServiceTargetReq {
    string service_id = 1;
  }

  message ListServiceTargetRes {
    repeated string targets = 1;

    common.Error err = 15;
  }
}

service IRegistrationCenterEmbedded {
  rpc CheckHealth(RegistrationCenterEmbedded.CheckHealthReq) returns (RegistrationCenterEmbedded.CheckHealthRes);
}

message RegistrationCenterEmbedded {
  message CheckHealthReq {
    string data = 1; // useless data, like 'ping'
  }

  message CheckHealthRes {
    common.Error err = 15;
  }
}
